name: CMake CI
            
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        build_type: [Release]
        c_compiler: [gcc]
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++

    steps:
    # - name: ssh config
    #   run: |
    #     mkdir ~/.ssh
    #     touch ~/.ssh/config
    #     echo "Host png.github.com
    #                 HostName github.com" >> ~/.ssh/config
    - uses: actions/checkout@v4
      with:
        submodules: true
        fetch-depth: 0

    - name: Install depens
      run: |
        git submodule update --init --recursive
    - name: Install more depens
      run: |
        sudo apt-get update
        sudo apt-get install -y libssl-dev libprotobuf-dev protobuf-compiler ninja-build
        cd /home/runner/work/raw/raw/sub/gns
        mkdir build
        cd build
        cmake -G Ninja ..
        ninja
        mkdir /home/runner/work/raw/raw/lib
        cp src/libGameNetworkingSockets_s.a /home/runner/work/raw/raw/lib/libGameNetworkingSockets.a
        sudo ldconfig
    - name: Install Vulkan SDK
      run: |
        sudo apt-get update
        sudo apt-get install -y wget tar
        wget -qO- https://sdk.lunarg.com/sdk/latest/linux/vulkan-sdk.tar.gz | tar -xz -C /tmp
        export VULKAN_SDK=/tmp/vulkan-sdk-*/x86_64
        export PATH=$VULKAN_SDK/bin:$PATH
        export LD_LIBRARY_PATH=$VULKAN_SDK/lib:$LD_LIBRARY_PATH
        export VK_ICD_FILENAMES=$VULKAN_SDK/etc/vulkan/icd.d
        export VK_LAYER_PATH=$VULKAN_SDK/etc/vulkan/explicit_layer.d
        echo "::add-path::$VULKAN_SDK/bin"
        echo "::add-path::$VULKAN_SDK/lib"
        echo "::set-env name=VK_ICD_FILENAMES::$VULKAN_SDK/etc/vulkan/icd.d"
        echo "::set-env name=VK_LAYER_PATH::$VULKAN_SDK/etc/vulkan/explicit_layer.d"

    - name: Verify Vulkan SDK Installation
      run: |
        vulkaninfo --summary
        glslc --version
    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    # - name: Configure CMake
    #   run: >
    #     cmake -B ${{ steps.strings.outputs.build-output-dir }}
    #     -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
    #     -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
    #     -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
    #     -G Ninja
    #     -S ${{ github.workspace }}

    # - name: Build
    #   run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    # - name: Test
    #   working-directory: ${{ steps.strings.outputs.build-output-dir }}
    #   run: ctest --build-config ${{ matrix.build_type }}
